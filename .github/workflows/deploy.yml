# Ä°ÅŸ akÄ±ÅŸÄ±mÄ±zÄ±n adÄ±
name: Deploy to VPS

# Bu iÅŸ akÄ±ÅŸÄ±nÄ±n ne zaman tetikleneceÄŸini belirtir
on:
  # 'main' dalÄ±na her 'push' yapÄ±ldÄ±ÄŸÄ±nda
  push:
    branches:
      - main

# YapÄ±lacak iÅŸleri tanÄ±mlar
jobs:
  # 'deploy' adÄ±nda bir iÅŸ tanÄ±mlÄ±yoruz
  deploy:
    # Bu iÅŸin hangi runner Ã¼zerinde Ã§alÄ±ÅŸacaÄŸÄ±nÄ± belirtiyoruz.
    # 'self-hosted' etiketi, sunucumuza kurduÄŸumuz runner'Ä± hedefler.
    runs-on: self-hosted

    # Ä°ÅŸin adÄ±mlarÄ±nÄ± listeler
    steps:
      # 1. AdÄ±m: BaÅŸlangÄ±Ã§ mesajÄ± yazdÄ±r
      - name: Starting deployment...
        run: echo "ğŸš€ Deployment initiated by a push to the main branch."

      # 2. AdÄ±m: Proje klasÃ¶rÃ¼ne git ve en gÃ¼ncel kodu indir
      - name: Pull latest source code
        run: |
          echo "Fetching latest code from GitHub..."
          git pull origin main
        # Bu komutun hangi klasÃ¶rde Ã§alÄ±ÅŸacaÄŸÄ±nÄ± belirtiyoruz.
        # Sunucudaki proje yolunu buraya yazmalÄ±sÄ±n!
        working-directory: /home/ibra/projects/fokus-web

      # 3. AdÄ±m: Docker container'larÄ±nÄ± yeniden baÅŸlat
      - name: Restart Docker container
        run: |
          echo "Restarting Caddy container to apply changes..."
          docker compose restart fokus_app_caddy
        # Bu komutun da proje klasÃ¶rÃ¼nde Ã§alÄ±ÅŸmasÄ± gerekiyor.
        working-directory: /home/ibra/projects/fokus-web

      # 4. AdÄ±m: BitiÅŸ mesajÄ±
      - name: Deployment successful
        run: echo "âœ… Site has been updated successfully!"